@inherits LayoutComponentBase
@using Blazored.SessionStorage
@inject IStringLocalizer<Resources.LayoutResource> Localizator
@inject IJSRuntime JS
@inject HttpClient httpClient
@inject ISessionStorageService SessionStorage

<div class="page">
    @if(AwakenedBackend == true) {
        <div class="sidebar">
            <NavMenu />
        </div>

        <main class="content px-4">
        <div style="right: 10px;position: absolute;">
            <a href="/privacy-policy">@Localizator["PrivacyPolicy"]</a>
            <a href="/terms-of-service"class="ms-4">@Localizator["TermsOfService"]</a>
            <SelectLanguage />
        </div>
            @Body
        </main>
    } else {
        <main class="content px-4" style="position: relative; left: 30%;">
            <p class="fs-2 fw-semibold">@Localizator["AwakeningBackend"]</p>
        </main>
    }
</div>

<div id="blazor-error-ui" data-nosnippet>
    @Localizator["ErrorOccured"]
    <a href="." class="reload">@Localizator["Reload"]</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool? AwakenedBackend = null;
    override protected async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            /* Awaken backend if not already done in Session */
            AwakenedBackend = await SessionStorage.GetItemAsync<bool?>("AwakenedBackend");
            if(AwakenedBackend == null || AwakenedBackend == false) {
                try {
                    await JS.InvokeVoidAsync("fetch", httpClient.BaseAddress + "/health");
                } catch { /* Ignore errors, it will anyway (probably) awaken */ }
                await SessionStorage.SetItemAsync("AwakenedBackend", true);
                AwakenedBackend = true;
            }
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}